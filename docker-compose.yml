version: '3.8' # Specifies the version of the Docker Compose file format. This affects which features are available and the file's structure.

services:
  catalog:
    build:
      context: ./catalog_service # The directory containing the Dockerfile and other resources for building the catalog service image.
      dockerfile: Dockerfile # Specifies the name of the Dockerfile. This is the default name, so it could be omitted unless a different filename is used.
    volumes:
      - catalog-data:/app/data # Mounts the named volume "catalog-data" to "/app/data" within the container. Used for persisting data generated by the catalog service.
    environment:
      - CATALOG_DB_PATH=/app/data/toys_db.csv # Environment variable specifying the path to the catalog database file within the container.
    ports:
      - "8081:8081" # Maps port 8081 of the container to port 8081 on the host, making the catalog service accessible externally.
    # No depends_on section here since catalog service does not depend on any other services to start.

  order:
    build:
      context: ./order_service # Directory with Dockerfile for building the order service image.
      dockerfile: Dockerfile
    volumes:
      - order-data:/app/data # Named volume "order-data" for persisting data related to orders.
    environment:
      - ORDERS_DB_PATH=/app/data/orders.csv # Path to the orders database file within the container.
      - CATALOG_SERVICE_HOST=catalog # Hostname of the catalog service, used for internal communication between services. This is the service name defined in this file.
    ports:
      - "8082:8082" # Exposes the order service on host port 8082.
    depends_on:
      - catalog # Specifies that the order service should start after the catalog service has started.

  frontend:
    build:
      context: ./frontend_service # Directory with Dockerfile for the frontend service.
      dockerfile: Dockerfile
    environment:
      - CATALOG_SERVICE_HOST=catalog # Hostname of the catalog service, for the frontend to communicate with.
      - ORDER_SERVICE_HOST=order # Hostname of the order service, for the frontend to communicate with.
    ports:
      - "8080:8080" # Maps port 8080 of the container to port 8080 on the host, for external access to the frontend.
      # Uncomment below line and comment above line to run on edlab
      # - "11345:8080" # Used to map port 8080 of the container to port 11345 on the edlab, for external access to the frontend.
    depends_on:
      - catalog # Ensures catalog service is started before frontend.
      - order # Ensures order service is started before frontend. This is crucial for the frontend to function properly since it needs to communicate with both services.

volumes:
  catalog-data: # Declares a named volume for storing catalog data persistently across container restarts.
  order-data: # Declares a named volume for storing order data persistently.
